<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[MORIZOTTER PRESS]]></title>
  <link href="http://morizotter.com/atom.xml" rel="self"/>
  <link href="http://morizotter.com/"/>
  <updated>2012-07-14T14:02:11+09:00</updated>
  <id>http://morizotter.com/</id>
  <author>
    <name><![CDATA[morizotter]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[gitで現在と過去をいったりきたり]]></title>
    <link href="http://morizotter.com/blog/2012/07/14/git-git/"/>
    <updated>2012-07-14T01:34:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/14/git-git</id>
    <content type="html"><![CDATA[<p>さて、gitの学習の時間です。今では毎日暇さえあればgitしてます。なんか気持ちいいんですよね。でも、せっかくgitを使っているのにコミットするばかりで、あまり過去の履歴を見たり過去に戻ったりしていません。</p>

<p>これからちょっと、過去に戻ったり、現在に戻ってきたりやってみようと思います。ネットで探したらよい記事がたくさん！</p>

<p>まずは、<a href="http://d.hatena.ne.jp/idesaku/20091106/1257507849">Git初心者が絶対に覚えておくべきコマンド</a>を参考に学習していきます！</p>

<h2>git &#8211;amend</h2>

<p><strong>直前のコミットを修正</strong></p>

<p><code>git --amend</code>で直前のコミットの内容を修正！できました！良い感じです。ちなみに、やり方としては、<code>git commit -m "t.txtを変更しまshia"</code>とか変なコミット分を打ってしまったときは、</p>

<pre><code>git --amend -m "t.txtを変更しました。"
</code></pre>

<p>とやれば直前のコミット文が上書きされます。またコード上でも、例えば<code>NSString *widht;</code>とかやっちゃっているときに、コードを修正して、<code>git add .</code>して、</p>

<pre><code>git --amend -m "適当なコミット文"
</code></pre>

<p>をすれば、直近のコミットが上書きされます。どっかの時点に戻ってしまうということもありません。これは便利！僕の場合、ついコミットしてしまってコミット後に動かしてアプリが落ちるので微修正して再度コミットということがちょくちょくあるので便利に使えそうです。</p>

<h2>git reset</h2>

<p><strong>指定位置まで戻る</strong></p>

<p>先ほどのコミットが終わったあと、logを出し、一応最新のSHAをメモってから、</p>

<pre><code>git reset HEAD^
</code></pre>

<p>とやってみました。すると最後のコミットをしていない状態に戻りました。<code>git log</code>で確認してみると、最後のコミットの情報が戻って来ません。ただ単にコミット前に戻っただけで、ソースは何も変わっていませんでした。git resetはHEADの位置を変更することが出来るようです。<code>^</code>はどのくらい前に戻るかということなんでしょうかね。うほ。HEADのいちを移動できるということは、新たにコミットしなければさっきの状態に戻れるかなと思い、以下のコマンドを実行してみました。</p>

<pre><code>git reset e66e5…(先ほどメモしたSHA)
</code></pre>

<p>すると、最新の状態に戻りました！<code>git status</code>とやっても変更点はないとメッセージが出るだけです。<code>git log</code>を確認して、２つ前に戻ってみました</p>

<pre><code>git reset ga1rg…（２つ前のSHA）
</code></pre>

<p>戻りました。というか、コードは全く変わってないのですが、2つ前より後にcommitしたものは、すべて未commitの状態に戻りました。この状態から最新の状態にも戻れました。更にもう一度2つ前の状態に戻って、</p>

<p><a href="http://transitive.info/article/git/command/checkout/">git checkoutの使い方</a>を参考に、修正されているファイルを修正前の状態に戻します。</p>

<pre><code>git checkout t.txt
</code></pre>

<p><code>git status</code>で見たところ、変更点はないというメッセージのみになりました。そして、この状態でちょっと変更を加えてコミット。更に、先ほどの最新の状態のSHAへ<code>git reset e66e5…(先ほどメモしたSHA)</code>で戻って見ることにしました。</p>

<p>ここで少々ややこしいことになりました。2つ前に戻って変更した部分が未コミットのadd候補、そしてe66e5…にはあるが2つ前に戻って変更したファイルにない部分がrm候補の未コミット状態で復活しました。とりあえず、ファイル自体は2つ前に戻って変更したものと変わらないようです。</p>

<p>ふむふむ。</p>

<p>そして最後に紹介されているのが、</p>

<h2>git reflog</h2>

<p><strong>HEADの変更の経緯を見ることができる</strong></p>

<p>ずらっと出てきた。</p>

<pre><code>c7d36af HEAD@{0}: reset: moving to c7d36af...
57a61a6 HEAD@{1}: commit: この状態の変更は？って文を追加
e66e588 HEAD@{2}: reset: moving to HEAD^
c7d36af HEAD@{3}: reset: moving to c7d36af...
0887fdb HEAD@{4}: reset: moving to 0887fdb...
c7d36af HEAD@{5}: reset: moving to c7d36af...
e66e588 HEAD@{6}: reset: moving to HEAD^
c7d36af HEAD@{7}: commit: -追加
e66e588 HEAD@{8}: commit (amend): コミット文を変更
6727c21 HEAD@{9}: commit (amend): 3
e130159 HEAD@{10}: commit: 3
0887fdb HEAD@{11}: commit: 更に文を追加
8d426c4 HEAD@{12}: commit: 文を追加
3c20bd5 HEAD@{13}: commit (initial): initial commit
</code></pre>

<p>ウホ、良い感じ。上記の&#8221;…&#8221;の部分は、伏せているだけで実際はちゃんとSHAが出てきます。</p>

<p>これで、自分が作業してきたHEADの戻りたい部分に戻れるわけですね！</p>

<p>いや、このブログ分量も適切で説明もわかり易くほんとうに勉強になりました！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MagicWandが届いた]]></title>
    <link href="http://morizotter.com/blog/2012/07/12/magicwand/"/>
    <updated>2012-07-12T00:47:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/12/magicwand</id>
    <content type="html"><![CDATA[<p><a href="http://www.morizotter.com/blog/2012/07/09/magictrackpad/">先日購入したMagicWand</a>が届きました！早速装着しています。</p>

<p><img class="center" src="http://dl.dropbox.com/u/8131276/octopress/magicwand1.jpg" width="400"></p>

<p>こんな感じ。デスクトップもTrackPadでやっぱりよいかもしれないと思いました。TrackPadは1軍昇格で、マウスが2軍落ちになりました。</p>

<p><img class="center" src="http://dl.dropbox.com/u/8131276/octopress/magicwand2.jpg" width="400"></p>

<p>結合部です。</p>

<p><img class="center" src="http://dl.dropbox.com/u/8131276/octopress/magicwand3.jpg" width="400"></p>

<p>横から見たところです。少し高さがあります。</p>

<p>使った感触としては、多少キーボードが重くなった感じがするものの、安定感は増しました。マウスほど手を動かさなくてもよいので、Macの動作が機敏になりました。結合部分のせいでタップがしづらくなったという意見も目にしたのですが、僕はタップでクリックの設定にしているので気になりません。</p>

<p>場所が定まるってのは大体の状況で快適になります！</p>

<p><a href="http://www.amazon.co.jp/gp/product/B004TTM0II/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B004TTM0II&linkCode=as2&tag=morizotter0f-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B004TTM0II&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizotter0f-22" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizotter0f-22&l=as2&o=9&a=B004TTM0II" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p>ちなみに、この記事はOctopressの<a href="http://octopress.org/docs/plugins/image-tag/">Image TagというPlugIn</a>を使って書きました。ちょっと詰まったけどなんとか行けました。httpsは読めないんだなぁ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LaunchPad]]></title>
    <link href="http://morizotter.com/blog/2012/07/11/launchpad/"/>
    <updated>2012-07-11T00:08:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/11/launchpad</id>
    <content type="html"><![CDATA[<p>今までDockにアプリケーションのフォルダのエイリアスを作ってたので、一切使ってなかったんだけど使ってみるとほんとうに便利。少なくともDockにアプリケーションのフォルダ置くよりは便利。フォルダもiOSっぽく綺麗にまとまるので美しい。</p>

<p>フォルダで管理するのと違ってページごとに並び替えができるのが地味にとても便利。大まかにページ分けして、よく使うアプリを上の方においておくと検索性も高まる。</p>

<p>全画面使うので一覧性がある。</p>

<p>いいことづくし。今までなぜ使わなかったか！（一因は前のAirが遅かったからだろうな。。）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[USキーボード4日目の感想]]></title>
    <link href="http://morizotter.com/blog/2012/07/10/us-keyboard/"/>
    <updated>2012-07-10T08:46:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/10/us-keyboard</id>
    <content type="html"><![CDATA[<p>7/7にMacBook Air Mid 2012が届いて4日になります。この間毎日使っているのですが、初めてトライしたUSキーボードの感想を書きたいと思います。概ね良好です！</p>

<p><strong>よい所</strong></p>

<ul>
<li>キーの配置

<ul>
<li>日本語キーボードに比べてキーを見ることが減りました。日本語キーボードよりキーの配置が良いと思います。</li>
<li>手に馴染みます。今のところControlを押す時以外は自然な手の配置のままでキーが打てます。</li>
<li>Return、Commandなどが近いところにあるなど指を不自然に伸ばす必要がないので疲労が軽減されます。</li>
</ul>
</li>
<li>見た目がすっきりしていて綺麗。

<ul>
<li>不要な情報が目に入ってこないというのは地味ですがすっきり感が増します。</li>
</ul>
</li>
<li>日本語キーボードからのスイッチが意外と楽。

<ul>
<li>最初は押し間違えが起こるかなぁなどと思っていたのですが、2日くらいで慣れました。Mac日本語キーボードとWindows日本語キーボードの差よりもだいぶ差が小さいです。</li>
</ul>
</li>
</ul>


<p><strong>最初戸惑ったところ</strong></p>

<ul>
<li>キーの配置

<ul>
<li>良い所でも書きましたが、日本語キーボードとの違いで最初は戸惑いました。あと、会社のMacで作業するときなど最初のうちはキーの押し間違いが起こります。慣れで解消しそうではあります。</li>
</ul>
</li>
<li>英語、日本語変換

<ul>
<li>最初は<code>Command + Space</code>のトグルでやってましたが、効率が悪いと考え、キーマッピングのソフトを入れました。(<a href="http://www.morizotter.com/blog/2012/07/07/us-keyboard-key-remap/">これ</a>) 問題は解消です。</li>
</ul>
</li>
</ul>


<p><strong>その他</strong></p>

<ul>
<li>入力が若干早くなったので余裕ができたのか、IMEまわりを触ってみました。いままでMacではずっとことえり一本だったのですが、Google日本語入力を試したところ、希望に近い変換候補が出る確率がかなり高くなったと思います。入力速度が更に上がりました。ATOKも有名なのでそのうち試してみたいなと思っています。</li>
</ul>


<p>こんなところです。このコンバージョンはかなりよかったので自宅のiMacもUSキーボードにしたいなと思っています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最近、見に来てくれくれる人も増えたので]]></title>
    <link href="http://morizotter.com/blog/2012/07/10/about-this-blog/"/>
    <updated>2012-07-10T01:26:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/10/about-this-blog</id>
    <content type="html"><![CDATA[<p>軽くこのブログについて書いておきます。</p>

<ul>
<li>思いつきをそのまま書いていきます。</li>
<li>一つの記事のボリュームはとても少ないと思います。</li>
<li>情報収集は基本的にネットです。他の人の書いたブログ記事へのリンクが沢山出ています。</li>
<li>ノウハウや知恵の共有はほんとうに素晴らしいことですね。ありがとうございます。</li>
<li>僕も提供できる側になれるように少しつづ頑張ります！</li>
<li>カテゴリもタグも付けていません。記事を書くスピードややる気を削ぐことがないように削ってます。</li>
<li>ただ、そのうちまとめ記事を書いていこうかななんて思っています。</li>
<li>Twitterでは<a href="http://twitter.com/morizotter/">@morizotter</a>という名前で呟いてます。</li>
<li><a href="http://morizotter.com">MORIZOTTER PRESS</a>は30歳からプログラミングを始めたmorizotterの活動のまとめ的な役割を担えれば良いと思っています。</li>
<li>記事は簡易ブログ作成フレームワークの<a href="http://octopress.org/">Octopress</a>でやってます。</li>
<li><a href="http://ja.wikipedia.org/wiki/Markdown">markdown</a>という記法で書けるのでほんとに軽く、楽しいです。</li>
<li>サクサクです。</li>
<li>Ruby気持ちいいです。</li>
</ul>


<p>こんなところです。
よろしくお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iTerm2がなかなか良い]]></title>
    <link href="http://morizotter.com/blog/2012/07/09/iterm2/"/>
    <updated>2012-07-09T23:40:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/09/iterm2</id>
    <content type="html"><![CDATA[<p>何人かの人に勧められたのでMac標準のターミナル.appからiTerm2に変えたのが多分1ヶ月ほど前。少しの間背景をぼやかして薄暗くしているだけでターミナルと同じようにしか使ってなかった。</p>

<p>ただ、最近、この良さに気づき始めている。一番シンプルだけど良いのは、<code>Command + D</code>での複数画面表示、そして、<code>Command + Shift + D</code>で上下にも分割できる。横に広いテーブルを見るときなど便利。下にできたビューで<code>Command + D</code>をするとまた左右に分割なんて。テーブルをたくさん表示したい時にかなり助かる。</p>

<p>更に、テーブルがビューに収まりきらなかったらテーブル単位で<code>Command + +</code>とか<code>Command + -</code>とかで、拡大縮小できる！地味に助かる。</p>

<p>ちょっと関連のない作業するときには右下の小さいビューでやったり、タブを開いてそちらでやったり。タブへの移動は<code>Command + 数字（タブ番号）</code>でらくらく。</p>

<p>そして早い！</p>

<p>こりゃ、人気の訳がわかりますなぁ！！</p>

<p>それにしても、日本語キーボードと英語キーボードの行き来はちょっと疲れる。MacBook Airの軽快さで印象がアップしているのかわからないけど、US慣れるとかなりいいよ！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bashのコマンド]]></title>
    <link href="http://morizotter.com/blog/2012/07/09/bash-command/"/>
    <updated>2012-07-09T23:27:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/09/bash-command</id>
    <content type="html"><![CDATA[<p>先日お世話になったのが<a href="http://www.atmarkit.co.jp/flinux/rensai/linuxtips/248chngext.html">このサイト</a>です。</p>

<p><a href="http://www.atmarkit.co.jp/flinux/rensai/linuxtips/248chngext.html">複数のファイル拡張子を一括で変更するには</a></p>

<p>シェルのコマンドって抵抗感があったけど、こんなに簡単にできるとは！</p>

<pre><code>$ ls
1.txt   2.txt   3.txt   4.txt 

$ for fname in *.txt; do
&gt; mv $fname ${fname%.txt}.md;
&gt; done

$ ls
1.md    2.md    3.md    4.md
</code></pre>

<p>ちょっと復習がてらやってみた。できた。
bashももっと学びたい！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iMacでMagic Trackpad]]></title>
    <link href="http://morizotter.com/blog/2012/07/09/magictrackpad/"/>
    <updated>2012-07-09T02:12:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/09/magictrackpad</id>
    <content type="html"><![CDATA[<p>なぜか今日トラックパッドの魅力に目覚めました。目覚めたのは2回目です。1回目は人生で初めてのMac, MacBook Pro Mid 2010を買ったときです。青天の霹靂でした。で、今日、なぜ目覚めたかというと、iMacではトラックパッド買ったものの、画像の編集などもやるのでいつの間にかマウスがメインになってたんですね。で、最近マウスがよくConnection Lost（だっけな）する。でトラックパッドを使ってみた訳です。こちらもBluetoothにつながった臨戦状態だったので。そしたらいいんです。キーボドにくっつけてみました。最高です。マウスだとどうしても手の移動が大きくなる。その点がトラックパッドだとだいぶ改善されます。トラックパッドはいつも同じ場所にいるので、マウスのようにたまに視界からロストして探すなんてこともありません。いいですね！</p>

<p><a href="http://www.zonaapple.com/ja/2011/02/magicwand-o-como-juntar-con-estilo-magic-trackpad-y-teclado/">MagicWand, キーボードで、彼の魔法のトラックパッドと結合またはスタイル</a></p>

<p>これ、いいかもだけど高さが変わるのが気になって買えない。あ、でも、でもムービー見てるとお店で使うとかにはいいかもしれない。</p>

<p><a href="http://www.amazon.co.jp/gp/product/B004TTM0II/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=B004TTM0II&linkCode=as2&tag=morizotter0f-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B004TTM0II&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizotter0f-22" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizotter0f-22&l=as2&o=9&a=B004TTM0II" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p><a href="http://www.chikapapa.com/2011/05/10/%E3%81%9F%E3%81%8B%E3%81%A0%E3%81%8B%E3%82%A2%E3%83%AB%E3%83%9F%E3%81%AE%E3%83%91%E3%82%A4%E3%83%97%E3%82%923500%E5%86%86%E3%81%A7%E8%B2%B7%E3%82%8F%E3%81%9B%E3%81%A6%E3%81%97%E3%81%BE%E3%81%86%E3%82%A2%E3%82%A4%E3%83%87%E3%82%A3%E3%82%A2%E3%81%AB%E3%82%84%E3%82%89%E3%82%8C%E3%81%9F/">たかだかアルミのパイプを3500円で買わせてしまうアイディアにやられた！</a></p>

<p>こんなこと書いている人も。うーん、ちょっと欲しい。でも考えてみたら、跡の残らないゴムみたいな物でつながればいいだけなんだけど。机から移動すること無いし。</p>

<p>20分後追記：</p>

<pre><code>買ったったw
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[USキーボードに慣れてしまうと]]></title>
    <link href="http://morizotter.com/blog/2012/07/09/us-vs-jpn-keyboard/"/>
    <updated>2012-07-09T01:15:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/09/us-vs-jpn-keyboard</id>
    <content type="html"><![CDATA[<p>新しいMacBook Air気に入ってます。早いです。キーボードもUSにして正解です。最初は慣れなかったのですが、<code>`</code>や<code>_</code>や<code>=</code>などが打ちやすいです。単体で考えればの話しですが&#8230;。</p>

<p>mou US ya JIS nantenakunatte dochirakani touitsusarerebaiinoni!</p>

<p>あああ</p>

<p>US使いやすいです。</p>

<p>でも、もう一台のMacはJISです。一気に使いづらくなりました。文章を書いている分にはいいのですが、<code>`</code>を打ったり、<code>_</code>を打ったり<code>=</code>を打ったりするときに、いちいちキーボードを見なきゃ行けなくなったりしてます。そして、最初に一番困ったのはEnterの押し間違えです。USの方がEnterが近いので（横に長い）、JISだと、<code>」</code>を入力しちゃいます。Controlの位置もたまに間違えます。最初は嫌だったのですが、Controlの位置はJISの方がよいかなと思います。<code>Control + A</code>だとか、<code>Control + K</code>だとかするときに、USだと小指の根元が痛くなります。まぁ、これも慣れと思ってがんばりますが。</p>

<p>んー、USキーボード。単体では正解。プログラミングも早くなりますきっと。まぁ、出費になるけど家のiMacのキーボードはUS買い直せばよいのかなぁなんて思います。</p>

<p>JISキーボードとの混在はややこしいですね。。他人のMacで作業することが多い場合はJISが無難なのかと思いましたよ。</p>

<p>その点差し引いても、USはプログラミングはしやすくなると思うので正解だと思っていますが！</p>

<p>どなたか、iMac日本語キーボード5ヶ月使用（結構きれい）とUSキーボード交換してくれる人いませんかねぇ。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[電車の中での学習]]></title>
    <link href="http://morizotter.com/blog/2012/07/08/train-study/"/>
    <updated>2012-07-08T22:29:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/08/train-study</id>
    <content type="html"><![CDATA[<p>最近、よく電車の中で移動中に記事を更新してる。このブログは完成度を高めるというよりも思いつきで断片的なことを書く傾向があるので、電車の中の移動時間が記事を書くのにちょうど良い。都内の移動なのでだいたい10分〜15分くらい。座れたら書くという感じ。</p>

<p>だいたいこれが最寄り駅のホームに着く頃に<code>rake gen_deploy</code>する。で、余裕があれば扉が開く前に、<code>git add .</code>して<code>git commit -m "*"</code>して、<code>git push</code>する。たいてい、<code>git push</code>の途中で電車を降りるが、pushが終わってなかったら駅のベンチで終わりまで見守り歩き出す。</p>

<p>そんな感じ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gitで共有リポジトリを作る]]></title>
    <link href="http://morizotter.com/blog/2012/07/08/git-init/"/>
    <updated>2012-07-08T22:15:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/08/git-init</id>
    <content type="html"><![CDATA[<p><a href="http://blog.s21g.com/articles/1312">共有リポジトリを作る</a>という記事が非常に参考になったので備忘録として記しておきます。</p>

<p>基本的にはからのリポジトリを<code>&lt;任意の名前&gt;.git</code>という形で作り、</p>

<pre><code>git init --bare --shared=true
</code></pre>

<p>をするということですね。</p>

<p><code>--bare</code>オプションに関しては、<a href="http://d.hatena.ne.jp/naokirin/20111201/1322576109">ここ</a>を参考にすると、管理ファイルのみのリポジトリを作成するということなんですね。で、グループ作業するときには<code>--shared=true</code>を指定すると。</p>

<p><code>--shared=true</code>を設定するとsshでアクセスしたときに自動的に適切なパーミッション設定をしてくれる？</p>

<pre><code>If a user SSHs into a server and has write access to the /opt/git/my_project.git directory, they will also automatically have push access. Git will automatically add group write permissions to a repository properly if you run the git init command with the --shared option.
</code></pre>

<p><a href="http://git-scm.com/book/en/Git-on-the-Server-Getting-Git-on-a-Server#Putting-the-Bare-Repository-on-a-Server">Putting the Bare Repository on a Server</a></p>

<p>この辺りはちょっとまだわかっていません。</p>

<p>あとはローカルの方でgit pushするとcloneできるようです。</p>

<p>完全に理解した訳ではないですが、上記の件だけでだいぶgitが身近になった気分です。</p>

<p>Dropboxに共有リポジトリを作る方法は<a href="http://naoki.sato.name/lab/archives/38">こちら</a>を参考にしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grepについて少し学んでみた]]></title>
    <link href="http://morizotter.com/blog/2012/07/08/grep/"/>
    <updated>2012-07-08T20:38:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/08/grep</id>
    <content type="html"><![CDATA[<p>コマンドラインでファイル検索できないと不便だなと思ったので、grepを学んでみることにした。</p>

<p>最初に参考にしたのは<a href="http://www.nurs.or.jp/~sugi/grep.htm">ここ</a>。基本的だと思う。テストとしてデスクトップに一つ適当にファイルを作ってみた。</p>

<pre><code>$ cd ~/Desktop/
$ mkdir test
$ echo "test テスト" &gt; test/test.txt
</code></pre>

<p>で、</p>

<pre><code>$ grep -r "テスト" ./test/
</code></pre>

<p>で、検索成功。出力結果はこんな感じ。</p>

<pre><code>./test/test.txt:test テスト
</code></pre>

<p>このブログのgitを含む記事を検索してみた。ぐは。大量に出てきた。gitを含む行が出力されるみたい。</p>

<p>ファイルを特定して検索してみた。やっぱり行。</p>

<p><a href="http://blog.paz-para.com/?p=386">ここ</a>を参照してオプションを知る。とりあえず、ファイル名だけを出力する<code>-l</code>とディレクトリ以下を再起的に検索する<code>-r</code>を覚えておこう！</p>

<p>これだけでも開きたいファイルを探すのが大変楽になった！
電車の中の細切れ時間での学習でした！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsを入れてみました]]></title>
    <link href="http://morizotter.com/blog/2012/07/08/rails/"/>
    <updated>2012-07-08T19:50:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/08/rails</id>
    <content type="html"><![CDATA[<p>Rubyの有名なフレームワークであるRailsを入れてみました。といってももうほとんどネットにある情報をそのままなぞっただけです。</p>

<p><a href="http://pplog.org/?p=1845">このサイト</a>が本当に丁寧でわかりやすかったです。とりあえずのプロジェクトも作成し実際動いたところで感動しました。</p>

<p>Railsもっと使いこなしていきたい！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gitの基本設定]]></title>
    <link href="http://morizotter.com/blog/2012/07/08/git-config/"/>
    <updated>2012-07-08T12:42:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/08/git-config</id>
    <content type="html"><![CDATA[<p>細切れ記事です。基本的にMORIZOTTER PRESSでは思いつきを思いつきのまま書いていくというスタイルなのでご了承ください。</p>

<p>gitの表示色をかえられるとどこかで読んだことを思い出し少し調べてみたら、<a href="http://d.hatena.ne.jp/nabnab/20100805/1281015625">良さげなページ</a>を見つけました。出力のカラーにとどまらず、基本的な設定部分が丁寧に説明されています。</p>

<p>まず、<code>git config --global</code>に続いての名前、emailの設定、<code>$git config --global color.ui auto</code>でのカラー設定、<code>git config --global --list</code>での基本設定内容の確認。</p>

<p>ふむふむ。勉強になりました！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcodeの環境移行が超楽！]]></title>
    <link href="http://morizotter.com/blog/2012/07/07/xcode-device-install/"/>
    <updated>2012-07-07T23:42:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/07/xcode-device-install</id>
    <content type="html"><![CDATA[<p>新しいMacなどに開発環境を移行したときに面倒なのはXcodeの証明書の移行でした。ちょっとしらべたところもとまかさんの簡単そうに見える記事を見つけやってみたところ、超絶簡単だったのでメモとして記しておきます。</p>

<p><strong>参考にした記事</strong></p>

<ul>
<li><a href="http://d.hatena.ne.jp/moto_maka/touch/20120623/1340396415">Mac環境を移行するときにXcodeでiPhone実記転送を可能にするまでの手順</a></li>
</ul>


<p>記事通りにやれば問題なく、いきました。間違えることはないだろうし、まぁ間違えても即復旧可能なのですがポイントとして、</p>

<ul>
<li>新しいXcodeのDeviceタブにTEAMがなかった場合は、Probivioning ProfilesのところからImportすればOK</li>
<li>ファイルはいくつか生成されるが、&lt;作成したファイル名>.developerprofileのみImportすればその他のプロビジョニングプロファイルがついてくる。</li>
</ul>


<p>ということくらいです。楽チンでよかった！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[USキーボードのキーのリマッップをしてみた]]></title>
    <link href="http://morizotter.com/blog/2012/07/07/us-keyboard-key-remap/"/>
    <updated>2012-07-07T23:10:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/07/us-keyboard-key-remap</id>
    <content type="html"><![CDATA[<p>いろいろ読んでるうちにUSキーボード使いやすいだろう。よしやってみるか！ということで、新しいAirはUSキーボードにしてみたんですね。で、これが結構ストレスフル。キーの配列が想像していた以上に違って、特に<code>`</code>や<code>~</code>、<code>_</code>や<code>+</code>や、<code>:</code>や<code>"</code>など基本的によく使いそうなところがだいぶ違う。もちろんControlやCommandの配置なども変わっているんですが、これは慣れでいけるなと思うし使いやすい面もあっていいのですが、上記の細かいのは少し時間がかかりそうです。</p>

<p>で、あと大きな問題は日本語-英語変換のを<code>Command + Space</code>（また+の場所間違った）でトグルでやらなければいけないところです。日本語キーボードの場合は&#8221;英数&#8221;と&#8221;かな&#8221;ボタンがあって一発なんですけどね。</p>

<p>ということで、この部分だけでも日本語を打ちやすいように変更することにしました。以前から情報は持っていたのですが、</p>

<ul>
<li><a href="http://www.fraction.jp/log/archives/2008/10/28/US_">USキーボードで入力切り替え</a></li>
<li><a href="http://yucomac.blog96.fc2.com/blog-entry-576.html">MacのUSキーボードで「英数キー」と「かなキー」を使いたい</a></li>
</ul>


<p>が参考になりました。USキーボードと日本語キーボードとの間で論争があるんですね。想像できますけどね。決着はなかなかつかないでしょうね〜。どちらもよいので。</p>

<p>で、専用のソフトを入れるんですが、ここ。</p>

<ul>
<li><a href="http://pqrs.org/macosx/keyremap4macbook/index.html.ja">KeyRemap4MacBook</a></li>
</ul>


<p>Twitter Bootstrapを使って作られたサイトだと思うんですが、とてもきれいで情報量も適切で参考になります。すごい。</p>

<p>とりあえず、このソフトをインストールし、左右のCommandを単体で押したときに日本語キーボードと同じように左が英数、右がかなと変更できるようにしました。かなり使いやすくなった！</p>

<p>よかった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Chromeをさらに便利に]]></title>
    <link href="http://morizotter.com/blog/2012/07/07/chrome-shortcut/"/>
    <updated>2012-07-07T22:24:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/07/chrome-shortcut</id>
    <content type="html"><![CDATA[<p>GoogleChromeを使っているときに、まだトラックパッドを使うことがちょこちょこあるので、調べてみました。調べた中で秀逸だったのがこのページ。</p>

<p><a href="http://wayohoo.com/google-chrome/tips/useful-shortcut-key-list.html">【厳選】本当に使える Google Chrome のショートカットキー17個まとめ。</a></p>

<p>17個という数も適切です。既に使っているものも多々あるのですが、今後使っていこうと思ったものを書いてみます。</p>

<table>
<thead>
<tr>
<th align="left">タブを閉じる      </th>
<th align="left"> Command + W</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">指定したタブへ移動 </td>
<td align="left"> Command + 数字(0〜9)</td>
</tr>
<tr>
<td align="left">アドレスバーにカーソルを移動 </td>
<td align="left"> Command + L</td>
</tr>
<tr>
<td align="left">ページを更新      </td>
<td align="left"> Command + R</td>
</tr>
<tr>
<td align="left">テキストの情報のみをペースト </td>
<td align="left"> Command + Shif + Option + V</td>
</tr>
</tbody>
</table>


<br>


<p>最後のは使わないかも。特に<code>Command + W</code>と<code>Command + L</code>と<code>Command + R</code>が重宝しそうです！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gitをDropboxで使うと起こる問題]]></title>
    <link href="http://morizotter.com/blog/2012/07/07/git-dropbox-problem/"/>
    <updated>2012-07-07T16:44:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/07/git-dropbox-problem</id>
    <content type="html"><![CDATA[<p>gitのPushに失敗するという面倒な事態に陥りました。おそらく、以前のMacBookAirと今のMacBookAirで同じファイルを編集したが原因です。</p>

<p><a href="http://d.hatena.ne.jp/gelegele/20120530/git_dropbox_fatal">ゲレゲレめも</a>さんの記述が大変参考になりました。ヒントであってもあるのとないのとは大違いです。</p>

<p>僕の場合は<code>.git</code>と<code>.git/refs/heads</code>とさらに<code>.git/refs/remotes/origin/master</code>に問題のあるファイルが生成されていたので、すべてrmして解消しました。</p>

<p>ふー。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacBook Air環境設定]]></title>
    <link href="http://morizotter.com/blog/2012/07/07/macbook-air-2012-env/"/>
    <updated>2012-07-07T13:59:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/07/macbook-air-2012-env</id>
    <content type="html"><![CDATA[<p><a href="http://www.morizotter.com/blog/2012/07/07/macbook-air-2012/">先ほどの基本的な設定</a>に加え、プログラミングの環境を整えていきます。</p>

<h2>Xcodeとコマンドラインツール（gitも付属）</h2>

<p>まずはXcodeのインストール。そしてコマンドラインツールをインストール。</p>

<h2>HomebrewとRuby</h2>

<p><a href="http://morizotter.com/blog/2012/07/249/">以前書いた記事</a>を参考にRubyをインストール。</p>

<p><code>brew update</code>しといた。落としてきたのは最新かもしれないけどさ。あと、まず最初に<code>brew doctor</code>やれと表示されたので、こちらもやっておきました。</p>

<p><a href="http://octopress.org/docs/setup/">Octopressのセットアップページ</a>からセットアップの続きを行う。</p>

<p><code>gem install</code></p>

<p><code>rbenv rehash</code></p>

<p><code>bundle install</code></p>

<p>Mou.appも入れたので、この記事は新しいMacBook Airで書いてます。USキーボードに慣れないけど、2010と比べて別物のようなサクサク状態にうきうきです！</p>

<p>ここで記事をPushできず。githubとbitbucketにSSH Keyを登録しなきゃ。ていうか、その前にgitの初期情報ちゃんとセットしよう。</p>

<h2>gitの設定とgithub、bitbucketへの接続</h2>

<p><a href="https://help.github.com/articles/set-up-git">名前の設定はgithubの設定ページ</a>に載っていたのでそこで。以前の端末のgitconfigをみたかったのだが、<code>git config --global --list</code>でいけるらしい。<a href="http://d.hatena.ne.jp/nabnab/20100805/1281015625">ここ</a>で確認。<code>git credential-osxkeychain</code>ができるように一応設定。昔これをやったようなおぼろげな記憶があったので。</p>

<ul>
<li><a href="https://help.github.com/articles/generating-ssh-keys">git SSH Key</a></li>
<li><a href="https://confluence.atlassian.com/display/BITBUCKET/How+to+install+a+public+key+on+your+bitbucket+account">bitbucket</a></li>
</ul>


<p>オッケー。githubもbitbucketもアクセスできた。</p>

<p>ちょっと休憩。US配列は思った以上にストレスあるな。チルダとかダルブクオテーションとか、+とか結構違う。地味にControlの位置が変わったのが影響して小指が痛い。</p>

<p>さて、ここで、Xcodeと一緒にインストールされたgitもhomebrewで管理したいと思い、<code>brew install git</code>やってみたところ、一部でエラー</p>

<pre><code>Error: The linking step did not complete successfully
The formula built, but is not symlinked into /usr/local
You can try again using `brew link git'
</code></pre>

<p>てことなので、<code>brew link git</code>を実行するも、再度エラー。</p>

<pre><code>Error: Could not symlink file: /usr/local/Cellar/git/1.7.11.1/bin/git-credential-osxkeychain
Target /usr/local/bin/git-credential-osxkeychain already exists. You may need to delete it.
</code></pre>

<p>さっき作ったファイルが影響しているっぽい。ここは新しい環境の気楽なところで、いわれるがままに<code>rm</code>してもう一度、<code>brew link git</code>で、gitのCommitもPushもいけたのでよしとする。次は最近やったSubversion</p>

<h2>Subversion</h2>

<p><a href="http://www.morizotter.com/blog/2012/07/05/subversion-with-homebrew/">これ</a>を参考に進める。Subversionの設定は完了！</p>

<h2>MySQL</h2>

<p>PHPも入れようと思ったけれど、面倒なのでMacに標準で搭載されてるものでよしとする。で、以下のブログ記事を参考に、<code>brew install mysql</code>やってみた！</p>

<ul>
<li><a href="http://blog.kiftwi.net/2011/06/22/mbp%E3%81%ABbrew%E3%81%A7mysql%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%97%E3%81%9F%E3%80%82/">MBPにbrewでMySQLを導入した</a></li>
<li><a href="http://dev.classmethod.jp/etc/macbookair-homebrew-mysql5-5-14/">MacBookAirでHomebrewを使ったMySQL 5.5.14のインストール</a></li>
<li><a href="http://tukaikta.blog135.fc2.com/blog-entry-197.html">HomebrewでMySQLをインストールする時に知っておきたいこと</a></li>
</ul>


<p>上記参考ブログにも書いてあったのですが、実際の設定は対話式で非常に簡単。しかも、DBの言語変更するの面倒くさいなと思っていたけど、<code>$mysql&gt; show variables like "char%";</code>を実行するといきなり下記の設定でうれしかった。</p>

<pre><code>+--------------------------+-------------------------------------------------------+
| Variable_name            | Value                                                 |
+--------------------------+-------------------------------------------------------+
| character_set_client     | utf8                                                  |
| character_set_connection | utf8                                                  |
| character_set_database   | utf8                                                  |
| character_set_filesystem | binary                                                |
| character_set_results    | utf8                                                  |
| character_set_server     | utf8                                                  |
| character_set_system     | utf8                                                  |
| character_sets_dir       | /usr/local/Cellar/mysql/5.5.25a/share/mysql/charsets/ |
+-------------------------- +-------------------------------------------------------+
</code></pre>

<p>以前、この設定を変えるのに苦戦したのが何だったんだというあっけなさ。</p>

<p>とりあえず、この辺にしておきます。ほとんどもう以前と同じように使えるんじゃないだろうか。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macbook Air mid 2012が届いた！]]></title>
    <link href="http://morizotter.com/blog/2012/07/07/macbook-air-2012/"/>
    <updated>2012-07-07T10:12:00+09:00</updated>
    <id>http://morizotter.com/blog/2012/07/07/macbook-air-2012</id>
    <content type="html"><![CDATA[<p><a href="http://www.apple.com/jp/macbookair/">MacbookAir Mid 2012</a>が届いた！これから設定！設定の過程を記しておこうと思います。</p>

<p>移行アシスタントで一気に移行してみてもよかったんですが、ほとんどDropboxやiCloudやEvernoteなので移行らくちん。面倒なのはPHPやMySQLなどの環境系だけなので、勉強も兼ねつつ環境系は再設定するということで、きれいな状態からやります！</p>

<h2>構成</h2>

<ul>
<li>11インチ</li>
<li>2.0GHz Intel Corei7 (Turbo Boost使用時最大2.6GHz)</li>
<li>8GB</li>
<li>256GB</li>
<li>USキーボード</li>
</ul>


<h2>ファーストインプレッション</h2>

<p><strong>早い！</strong></p>

<p>MacbookAir2010と比べると格段の差です。まぁ以前はメモリ2GBでLionにしてからメモリぎりぎりでやってるしな〜。2012は検索やウィンドウを閉じるときなど早いです。きれいな環境というのもあると思いますが！</p>

<h2>セッティング開始</h2>

<h4>ソフトウェア・ダウンロード</h4>

<p>早速実行したのはソフトウェアダウンロード。いくつか更新がありました。</p>

<h4>システム環境設定</h4>

<p>Finderの設定を変更。トラックパッドの設定を変更。ことえりをいれとく。へー、アイヌ語キーボードなんてあるんだ。アイヌ語って文字あったっけな。ふむ。便宜的に日本語を拡張して表現するのか。USキーボードの<code>Command+Space</code>に慣れなきゃな。いちおキーボードのファンクションキーを使えるようにしておく。コンピュータ名が&#8221;〜〜no Macbook Air&#8221;とか変な感じだったので共有から変更。</p>

<h4>アプリをインストール</h4>

<p>DropboxとEvernoteをインストールして同期。がっつり同期！GoogleChromeインストール。最近、iOS系でAppStoreに問題がありインストールしても起動しないなどのエラーが心配だったが、ちょっと調べて問題は解決してるらしいので、他のアプリもDL、TwitterとかPixelmaterとかスカイプとかiWorkとかiTerms2とかいろいろ！ MacAppStoreからOS X Lionがダウンロードできるんだけど何だろう。Snowleopard用かな。ちなみに、The Tiny Bang Stroyってゲーム面白いっす。</p>

<h4>もう移行終わり？</h4>

<p>んーーー。これでほぼ移行完了したっぽい。。10分くらいだよこれ。すごすぎる。まぁ、今裏ではEvernoteやDropboxが、そしてiCloudがメール関係で動いてるっぽいけど。移行アシスタント必要ないな。</p>

<hr />

<h4>ちょい手間取った1</h4>

<p>あ、Photoshopの移行忘れてた！現行のPhotoshopをアンインストールしてライセンス認証を解除してっと。うは、新しいMacBook Airにソフトをインストールするにはどうすればいいの！？</p>

<p>Adobeの体験版ダウンロードページに行ってもCS5のダウンロードは終了しているということ。サポートフォーラムでも、インストール用CDやDVDがない場合は、アップグレードの推奨。うーむ、困った。</p>

<p>ネットを探してもグレーっぽいものしか見つからず来週Adobeに電話するかと諦めかけていたところで、昔購入した本にCS5の体験版があったことを思い出した。で、はじめて<a href="http://support.apple.com/kb/HT5287?viewlocale=ja_JP">リモートディスク</a>を使いiMacに接続、CD-ROMから無事インストールし、Adobeのサイトに登録していたシリアルから無事ライセンス認証をクリアしたのでした。</p>

<h4>ちょい手間取った2</h4>

<p>メールアドレスが増えすぎちゃっているのだが、ほとんどgmailなので登録は一発。ただ、さくらのメール設定には苦戦した。ユーザ名はメールアドレスなので。でも、最終的に躓いた原因はパスワードの間違えでした。あふあふ。</p>

<p>さて、基本設定はこれでほぼ終わりかな。次は恐怖の環境設定です。Homebrewで一通りやろうと思ってます。phpの設定ファイルとか面倒そうだ！</p>

<p><a href="http://www.morizotter.com/blog/2012/07/07/macbook-air-2012-env/">環境設定について読む</a></p>
]]></content>
  </entry>
  
</feed>
